import java.util.*;
class User {
    private String username;
    private String password;
    private String profile;

    // Constructor
    public User(String username, String password) {
        this.username = username;
        this.password = password;
        this.profile = "Default Profile";
    }

    public String getUsername() {
        return username;
    }

    public boolean checkPassword(String password) {
        return this.password.equals(password);
    }

    public void updatePassword(String newPassword) {
        this.password = newPassword;
        System.out.println("Password updated successfully.");
    }

    public void updateProfile(String newProfile) {
        this.profile = newProfile;
        System.out.println("Profile updated successfully.");
    }

    public void viewProfile() {
        System.out.println("Profile: " + profile);
    }
}

class Exam {
    private String[] questions = {
            "What is Java?",
            "Which of the following is a programming language?",
            "Which one is not OOP principle?"
    };

    private String[][] options = {
            {"1. A programming language", "2. A fruit", "3. A car", "4. None of the above"},
            {"1. Python", "2. Dog", "3. Table", "4. Book"},
            {"1. Inheritance", "2. Encapsulation", "3. Polymorphism", "4. Abstraction"}
    };

    private int[] correctAnswers = {1, 1, 3};
    private Map<Integer, Integer> userAnswers = new HashMap<>();
    private static final int TIME_LIMIT = 30; // time in seconds

    public void startExam() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Exam started. You have " + TIME_LIMIT + " seconds.");
        long startTime = System.currentTimeMillis();

        for (int i = 0; i < questions.length; i++) {
            System.out.println(questions[i]);
            for (String option : options[i]) {
                System.out.println(option);
            }
            System.out.print("Select your answer (1-4): ");
            int answer = sc.nextInt();
            userAnswers.put(i, answer);

            long elapsedTime = (System.currentTimeMillis() - startTime) / 1000;
            if (elapsedTime >= TIME_LIMIT) {
                System.out.println("Time's up! Auto-submitting the exam.");
                break;
            }
        }
        sc.close();
        submitExam();
    }

    public void submitExam() {
        System.out.println("Exam submitted.");
        int score = 0;
        for (int i = 0; i < correctAnswers.length; i++) {
            if (userAnswers.containsKey(i) && userAnswers.get(i) == correctAnswers[i]) {
                score++;
            }
        }
        System.out.println("Your score: " + score + "/" + correctAnswers.length);
    }
}

public class OnlineExaminationSystem {
    private static List<User> users = new ArrayList<>();
    private static User loggedInUser = null;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Creating a default user
        users.add(new User("student1", "password123"));

        while (true) {
            if (loggedInUser == null) {
                System.out.println("1. Login\n2. Exit");
                int choice = sc.nextInt();
                if (choice == 1) {
                    login(sc);
                } else {
                    System.out.println("Exiting...");
                    break;
                }
            } else {
                System.out.println("1. Update Profile\n2. Change Password\n3. Take Exam\n4. Logout");
                int choice = sc.nextInt();
                switch (choice) {
                    case 1:
                        updateProfile(sc);
                        break;
                    case 2:
                        updatePassword(sc);
                        break;
                    case 3:
                        takeExam();
                        break;
                    case 4:
                        logout();
                        break;
                    default:
                        System.out.println("Invalid choice.");
                        break;
                }
            }
        }
        sc.close();
    }

    private static void login(Scanner sc) {
        System.out.print("Enter username: ");
        String username = sc.next();
        System.out.print("Enter password: ");
        String password = sc.next();

        for (User user : users) {
            if (user.getUsername().equals(username) && user.checkPassword(password)) {
                loggedInUser = user;
                System.out.println("Login successful.");
                return;
            }
        }
        System.out.println("Invalid username or password.");
    }

    private static void updateProfile(Scanner sc) {
        System.out.print("Enter new profile info: ");
        sc.nextLine();  // Consume the newline
        String newProfile = sc.nextLine();
        loggedInUser.updateProfile(newProfile);
    }

    private static void updatePassword(Scanner sc) {
        System.out.print("Enter current password: ");
        String currentPassword = sc.next();
        if (loggedInUser.checkPassword(currentPassword)) {
            System.out.print("Enter new password: ");
            String newPassword = sc.next();
            loggedInUser.updatePassword(newPassword);
        } else {
            System.out.println("Incorrect current password.");
        }
    }

    private static void takeExam() {
        Exam exam = new Exam();
        exam.startExam();
    }

    private static void logout() {
        System.out.println("Logged out successfully.");
        loggedInUser = null;
    }
}
